import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.2'
    id 'org.openapi.generator' version '4.2.3'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
}

group 'com.clevershuttle.fleetmanager'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.3'
    implementation 'com.h2database:h2:2.1.214'

    //It has transitive dependencies with vulnerabilities! Using this ONLY for interview purposes, because the
    // newest version makes compile problems, which possible solution takes a little bit of time and testing.
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'javax.validation:validation-api:1.1.0.Final'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "app.jar"
}

//Configuration and tasks necessary for the creation of the API server stub.

sourceSets.main.java.srcDirs += "${buildDir}/generated/fleetmanager-api-v1/src/main/java"

springBoot {
    mainClass = 'com.dataguard.DataguardBackendApplication'
}

task copyOpenapiFileToBuild(type: Copy) {
    from file("$projectDir/src/main/resources/fleetmanager-api-v1.yaml")
    into file("$buildDir/resources/main")
}

task buildFleetmanagerApi(type: GenerateTask) {
    dependsOn copyOpenapiFileToBuild
    generatorName = "spring"
    inputSpec = "$buildDir/resources/main/fleetmanager-api-v1.yaml"
    outputDir = "$buildDir/generated/fleetmanager-api-v1"
    packageName = project.group
    modelPackage = project.group + ".apimodel"
    apiPackage = project.group + ".api"
    configOptions = [
            delegatePattern     : "true"
    ]
}

compileJava.dependsOn buildFleetmanagerApi